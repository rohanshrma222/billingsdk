{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "payment-card",
  "type": "registry:block",
  "title": "Payment Card",
  "description": "A payment card component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/payment-card.tsx",
      "content": "'use client';\nimport { useEffect, useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport {Card,CardContent} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight, Calendar, CreditCard, Gift, Lock } from \"lucide-react\";\nimport { AnimatePresence, motion } from \"motion/react\";\n\nexport interface finalTextProps {\n  text: string;\n}\n\nexport interface PaymentCardProps {\n  title: string;\n  description: string;\n  price: string;\n  feature?: string;\n  featuredescription?: string;\n  feature2?: string;\n  feature2description?: string;\n  finalText?:finalTextProps[];\n  onPay?: (data: { cardNumber: string; expiry: string; cvc: string }) => Promise<void> | void;\n  className?: string;\n}\n\nexport function PaymentCard({ title, description, price, feature, featuredescription, feature2, feature2description, finalText = [], onPay, className }: PaymentCardProps) {\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [index, setIndex] = useState(0);\n  const [errors, setErrors] = useState<{ card?: string; expiry?: string; cvc?: string }>({});\n\n  const validate = () => {\n    const newErrors: typeof errors = {};\n    // Card number validation\n    if (!/^[0-9 ]{16,19}$/.test(cardNumber)) {\n      newErrors.card = \"Card number must be 16 digits and only numbers.\";\n    }\n\n    // Expiry validation \n    if (!/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expiry)) {\n      newErrors.expiry = \"Enter a valid expiry date (MM/YY).\";\n    } else {\n      const [month, year] = expiry.split(\"/\").map(Number);\n      const now = new Date();\n      const expDate = new Date(2000 + year, month - 1);\n      if (expDate < now) {\n        newErrors.expiry = \"Expiry date cannot be in the past.\";\n      }\n    }\n\n    // CVC validation\n    if (!/^[0-9]{3,4}$/.test(cvc)) {\n      newErrors.cvc = \"CVC must be 3 or 4 digits.\";\n    }\n\n    setErrors(newErrors);\n    if(Object.keys(newErrors).length === 0){\n      return true;\n    }\n    return false;\n  };\n\n  const handlePay = ()=>{\n    if (validate()) {\n      if(onPay){\n        onPay({ cardNumber, expiry, cvc });\n        console.log(\"Payment processed!\");\n      }\n      else{\n        console.log(\"error\");\n      }\n    }\n  };\n\n // Final text animation\n  useEffect(() => {\n    if (!finalText || finalText.length === 0) return;\n\n    const interval = setInterval(() => {\n      setIndex((prev) => (prev + 1) % finalText.length)\n    }, 2000) \n\n    return () => clearInterval(interval)\n  }, [finalText])\n\n  return (\n    <Card\n      className={cn(\n        \"w-full max-w-4xl px-1 md:px-5 md:py-3 flex flex-col md:flex-row overflow-hidden md:gap-1 gap-2 pt-1\",\n        className\n      )}\n    >\n      {/* Right: Summary */}\n      <CardContent className=\"order-1 md:order-2 w-full md:max-w-[350px]\n       py-2 px-2 sm:py-3 md:py-6 h-fit my-auto md:px-4 md:w-1/2  \n        rounded-lg bg-gradient-to-br from-[#F8CEF8]/15 via-background to-[#F8CEF8]/10  \n        flex flex-col gap-4 md:gap-6\">\n        <div className=\" px-2 py-1\">\n          <h2 className=\"md:text-lg text-xl font-medium \">You've to pay</h2>\n          <p className=\"text-xl md:text-2xl lg:text-3xl font-mono text-foreground mt-1\">\n           ${price || \"320\"}\n        <span className=\"text-xs  font-mono text-foreground\">.00</span>\n          </p>\n        </div>\n\n        <div className=\"flex flex-col gap-3 md:gap-4 mt-4 px-2\">\n          <div>\n          <h3 className=\"flex items-center gap-2 text-foreground  text-sm md:text-base\">\n          <motion.svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"text-foreground\"\n          >\n            <motion.circle\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              initial={{ pathLength: 0 }}\n              animate={{ pathLength: 1 }}\n              transition={{ duration: 0.6 }}\n            />\n            <motion.path\n              d=\"M9 12l2 2 4-4\"\n              initial={{ pathLength: 0 }}\n              animate={{ pathLength: 1 }}\n              transition={{ duration: 0.6, delay: 0.6 }}\n            />\n          </motion.svg>\n            {feature || \"Payment & Invoice\"}\n          </h3>\n            <p className=\"text-xs md:text-sm  mt-2 leading-relaxed\">\n              {featuredescription || \"Automated billing and invoicing with detailed transaction records. Professional receipts delivered instantly to your email.\"}\n            </p>\n          </div>\n\n          <div>\n            <h3 className=\"flex items-center gap-2   text-sm md:text-base\">\n          <motion.svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"text-foreground\"\n        >\n          <motion.circle\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            initial={{ pathLength: 0 }}\n            animate={{ pathLength: 1 }}\n            transition={{ duration: 0.6 }}\n          />\n          <motion.path\n            d=\"M9 12l2 2 4-4\"\n            initial={{ pathLength: 0 }}\n            animate={{ pathLength: 1 }}\n            transition={{ duration: 0.6, delay: 0.6 }}\n          />\n        </motion.svg>\n   {feature2 || \"Priority Support\"}\n            </h3>\n            <p className=\"text-xs md:text-sm  mt-2 leading-relaxed text-foreground\">\n              {feature2description || \"Get dedicated customer support with faster response times and direct access to our technical team for any issues.\"}\n            </p>\n          </div>\n\n        \n        </div>\n\n        <div className=\" rounded-lg py-2 md:px-1 md:py-4 text-foreground  md:mt-2 flex justify-center items-center overflow-hidden \">\n        <AnimatePresence mode=\"wait\">\n        <motion.p\n          key={index}\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: -10 }}\n          transition={{ duration: 0.6 }}\n          className=\"text-xs sm:text-sm text-center leading-relaxed absolute text-center overflow-hidden text-foreground\"\n        >\n          {finalText[index].text}\n        </motion.p>\n      </AnimatePresence>\n        </div>\n      </CardContent>\n\n      {/* Left: Payment Form */}\n      <CardContent className=\"order-2 md:order-1 w-full py-6 px-4 sm:py-8 sm:px-6 lg:px-10 flex flex-col gap-6 md:flex-1\">\n        <div className=\"flex flex-col gap-6 w-full\">\n          <div className=\"flex flex-col gap-2\">\n            <h2 className=\"text-foreground text-xl sm:text-2xl font-medium\">\n              {title || \"Final step, make the payment.\"}\n            </h2>\n            <p className=\"text-muted-foreground text-sm sm:text-base text-foreground\">\n              {description ||\"To finalize your subscription, kindly complete your payment using a valid credit card.\"}\n            </p>\n          </div>\n\n          {/* Card Number */}\n          <div className=\"flex flex-col gap-3\">\n  <label className=\"text-sm font-medium text-foreground flex items-center gap-2\">\n    <CreditCard className=\"w-4 h-4\" /> Card number\n  </label>\n  <div className=\"relative\">\n    <div className=\"flex items-center rounded-lg border border-border bg-card px-4 py-3 w-full transition-colors hover:border-muted-foreground/50 focus-within:border-ring focus-within:ring-1 focus-within:ring-ring\">\n      \n      {/* Animated Logos */}\n      <div className=\"relative w-16 h-6  overflow-hidden flex items-center\">\n  <AnimatePresence mode=\"wait\">\n    <motion.img\n      key={index} \n      src={[\n        \"https://img.icons8.com/color/48/visa.png\",\n        \"https://img.icons8.com/color/48/mastercard-logo.png\",\n        \"https://img.icons8.com/color/48/amex.png\",\n        \"https://img.icons8.com/color/48/rupay.png\",\n      ][index % 4]}\n      alt=\"card\"\n      className=\"w-6 h-6\"\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -10 }}\n      transition={{ duration: 0.5 }}\n    />\n  </AnimatePresence>\n    </div>\n\n      {/* Input */}\n      <input\n        value={cardNumber}\n        onChange={(e) => setCardNumber(e.target.value)}\n        className=\"flex-1 bg-transparent outline-none text-sm placeholder:text-muted-foreground\"\n        placeholder=\"1234 5678 9012 3456\"\n        maxLength={19}\n      />\n    </div>\n    {errors.card && (\n      <p className=\"text-xs text-destructive mt-1\">{errors.card}</p>\n    )}\n      </div>\n    </div>\n          <div className=\"flex gap-6 items-start\">\n            <div className=\"flex flex-col gap-1 w-fit\">\n              <label className=\"text-xs sm:text-sm font-medium text-foreground flex items-center gap-1 sm:gap-2\">\n                <Calendar className=\"w-3 h-3 sm:w-4 sm:h-4\" /> Expiry\n              </label>\n              <div className=\"relative w-20 pt-2\">\n                <input\n                  value={expiry}\n                  onChange={(e) => setExpiry(e.target.value)}\n                  className=\"w-full rounded-md border border-border bg-card px-2 py-2 sm:px-3 sm:py-2.5 text-xs sm:text-sm text-center placeholder:text-muted-foreground transition-colors hover:border-muted-foreground/50 focus:border-ring focus:ring-1 focus:ring-ring focus:outline-none\"\n                  placeholder=\"MM/YY\"\n                  maxLength={5}\n                />\n                {errors.expiry && (\n                  <p className=\"text-xs text-destructive mt-1\">{errors.expiry}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-col gap-1 w-fit\">\n              <label className=\"text-xs sm:text-sm font-medium text-foreground flex items-center gap-1 sm:gap-2\">\n                <Lock className=\"w-3 h-3 sm:w-4 sm:h-4\" /> CVC\n              </label>\n              <div className=\"relative w-20 pt-2\">\n                <input\n                 \n                  value={cvc}\n                  onChange={(e) => setCvc(e.target.value)}\n                  className=\"w-full rounded-md border border-border bg-card px-2 py-2 sm:px-3 sm:py-2.5 text-xs sm:text-sm text-center placeholder:text-muted-foreground transition-colors hover:border-muted-foreground/50 focus:border-ring focus:ring-1 focus:ring-ring focus:outline-none\"\n                  placeholder=\"123\"\n                  maxLength={4}\n                />\n                {errors.cvc && (\n                  <p className=\"text-xs text-destructive mt-1\">{errors.cvc}</p>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-col gap-3\">\n            <label className=\"text-sm font-medium text-foreground flex items-center gap-2\">\n              <Gift className=\"w-4 h-4\" /> Discount code\n            </label>\n            <div className=\"flex items-center sm:flex-row gap-3\">\n              <input\n                className=\"flex-1 rounded-lg border border-border bg-card px-4 py-3 text-sm placeholder:text-muted-foreground transition-colors hover:border-muted-foreground/50 focus:border-ring focus:ring-1 focus:ring-ring focus:outline-none\"\n                placeholder=\"Enter discount code\"\n                maxLength={12}\n              />\n              <Button variant=\"outline\" size=\"default\" className=\"px-3 whitespace-nowrap\">\n                Apply\n              </Button>\n            </div>\n          </div>\n          <Button \n            variant=\"default\"\n            className=\"mt-6 w-full sm:w-auto px-8 py-3 text-base font-medium\" \n            onClick={handlePay}\n          >\n            Pay now\n            <ArrowRight className=\"w-4 h-4 ml-2\" />\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/billingsdk/payment-card.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/payment-card-demo.tsx",
      "content": "'use client';\nimport {PaymentCard} from \"@/components/billingsdk/payment-card\";\n\nexport function PaymentCardDemo() {\n  return <PaymentCard\n  title=\"Final step, make the payment.\"\n  description=\"To finalize your subscription, kindly complete your payment using a valid credit card.\"\n  price=\"100\"\n  finalText={[\n    { text: \"Automated billing & invoices\" },\n    { text: \"Priority support\" },\n    { text: \"Exclusive member benefits\" },\n  ]}\n  feature=\"Payment & Invoice\"\n  featuredescription=\"Automated billing and invoicing with detailed transaction records. Professional receipts delivered instantly to your email.\"\n  feature2=\"Priority Support\"\n  feature2description=\"Get dedicated customer support with faster response times and direct access to our technical team for any issues.\"\n  onPay={async ({ cardNumber, expiry, cvc }) => {\n    console.log(`Payment Processed! ${cardNumber}, exp ${expiry}, cvc ${cvc}`);\n  }}\n  />;\n}\n\nexport default PaymentCardDemo;",
      "type": "registry:component",
      "target": "components/payment-card-demo.tsx"
    }
  ]
}
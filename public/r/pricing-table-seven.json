{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-seven",
  "type": "registry:block",
  "title": "Pricing Table Seven",
  "description": "A modern pricing table component with contact us plan",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-seven.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card } from \"@/components/ui/card\"\nimport { Check } from \"lucide-react\"\nimport { type Plan } from \"@/lib/billingsdk-config\"\n\nexport interface PricingTableSevenProps {\n  plans: Plan[]\n  title: string\n  description: string\n  onPlanSelect: (planId: string) => void\n}\n\nexport function PricingTableSeven({\n  plans,\n  title,\n  description,\n  onPlanSelect,\n}: PricingTableSevenProps) {\n  const [isYearly, setIsYearly] = useState(false)\n\n  if (!plans || !Array.isArray(plans)) {\n    console.error(\"PricingTableSeven: plans prop must be an array\")\n    return null\n  }\n\n  return (\n    <section className={`py-16 px-4 bg-background min-h-screen flex items-center`}>\n      <div className=\"max-w-6xl mx-auto w-full \">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-4xl font-extrabold text-foreground mb-2\">{title}</h2>\n          <p className=\"text-muted-foreground text-base mb-8\">{description}</p>\n\n          {/* Toggle Switch */}\n          <div className=\"flex items-center justify-center gap-4 mb-8\">\n            <span className={`text-sm font-medium transition-colors ${!isYearly ? \"text-foreground\" : \"text-muted-foreground\"}`}>\n              Monthly\n            </span>\n            <button\n              onClick={() => setIsYearly(!isYearly)}\n              className=\"relative inline-flex h-6 w-11 items-center rounded-full bg-muted transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-offset-2\"\n              aria-label={`Switch to ${isYearly ? 'monthly' : 'yearly'} billing`}\n            >\n              <motion.span\n                className=\"inline-block h-4 w-4 transform rounded-full bg-primary shadow-lg\"\n                animate={{ x: isYearly ? 22 : 4 }}\n                transition={{ type: \"spring\", stiffness: 500, damping: 30 }}\n              />\n            </button>\n            <span className={`text-sm font-medium transition-colors ${isYearly ? \"text-foreground\" : \"text-muted-foreground\"}`}>\n              Yearly\n            </span>\n          </div>\n        </div>\n\n        {/* Pricing Cards */}\n        <div className=\"grid md:grid-cols-3 gap-6 max-w-4xl mx-auto\">\n          {plans.map((plan) => (\n            <Card\n              key={plan.id}\n              className={`relative overflow-hidden transition-all duration-300 hover:shadow-md border-border/50 rounded-4xl p-0 bg-muted ${\n                plan.highlight ? \"shadow-md\" : \"shadow-sm\"\n              }`}\n            >\n              <div className=\"rounded-b-4xl overflow-hidden shadow-md bg-primary-foreground\">\n                <div className=\"rounded-2xl mx-4 mt-4 overflow-hidden\">\n                  <div className=\" px-6 py-8 rounded-3xl relative shadow-sm bg-muted brightness-95\">\n                    <div className=\"rounded-3xl inline-flex px-3 py-1 bg-primary-foreground mb-4 brightness-150 relative -top-4 -left-2 \">\n                      <h3 className=\"text-sm font-semibold text-center\">{plan.title}</h3>\n                    </div>\n\n                    <div className=\"flex justify-start items-end text-center -left-10 top-4\">\n                      {plan.monthlyPrice === \"Custom\" ? (\n                        <div className=\"flex items-baseline justify-center\">\n                          <div className=\"text-4xl font-bold mb-2.5 text-primary\">Custom</div>\n                            <AnimatePresence mode=\"wait\" initial={false}>\n                              <motion.span\n                                key={isYearly ? \"per-year\" : \"per-month\"}\n                                className=\"text-sm text-primary/70 ml-2\"\n                                initial={{ opacity: 0, y: 7 }}\n                                animate={{ opacity: 1, y: 0 }}\n                                exit={{ opacity: 0, y: -8 }}\n                                transition={{ duration: 0.2 }}\n                              >\n                              / {isYearly ? \"year\" : \"month\"}\n                              </motion.span>\n                            </AnimatePresence>          \n                        </div>\n                      ) : (\n                        <div className=\"flex items-baseline justify-center\">\n                              <AnimatePresence mode=\"wait\" initial={false}>\n                                <motion.span\n                                  key={isYearly ? \"yearly-price\" : \"monthly-price\"}\n                                  className=\"text-5xl font-bold text-primary ml-1\"\n                                  initial={{ opacity: 0, y: 8 }}\n                                  animate={{ opacity: 1, y: 0 }}\n                                  exit={{ opacity: 0, y: -8 }}\n                                  transition={{ duration: 0.2 }}\n                                >\n                                  <div className=\"\">\n                                  {isYearly ? plan.yearlyPrice : plan.monthlyPrice}\n                                  </div>\n                                </motion.span>\n                             </AnimatePresence>\n                             <AnimatePresence mode=\"wait\" initial={false}>\n                               <motion.span\n                                  key={isYearly ? \"per-year\" : \"per-month\"}\n                                  className=\"text-sm text-primary/70 ml-2\"\n                                  initial={{ opacity: 0, y: 8 }}\n                                  animate={{ opacity: 1, y: 0 }}\n                                  exit={{ opacity: 0, y: -8 }}\n                                  transition={{ duration: 0.2 }}\n                                >\n                                / {isYearly ? \"year\" : \"month\"}\n                               </motion.span>\n                        </AnimatePresence>          \n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"px-6 py-6 text-center\">\n                    <p className=\" text-sm mb-6 -ml-6\">{plan.description}</p>\n                    <Button \n                      onClick={() => onPlanSelect(plan.id)}\n                      className=\"w-full shadow-[inset_0_6px_6px_-4px_rgba(255,255,255,0.6)] rounded-full py-6 font-medium text-sm\"\n                    >\n                      {plan.buttonText}\n                    </Button>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"px-6 py-6 rounded-b-xl mx-4 mb-4\">\n                \n                <ul className=\"space-y-3\">\n                  {plan.features?.map((feature, idx) => (\n                    <li key={`${plan.id}-feature-${idx}`} className=\"flex items-start gap-3\">\n                      <Check className={`h-4 w-4 flex-shrink-0 mt-0.5 ${feature.iconColor || \"text-gray-500\"}`} />\n                      <span className=\"text-sm leading-relaxed\">{feature.name}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-seven.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-seven-demo.tsx",
      "content": "\"use client\"\n\nimport { PricingTableSeven } from \"@/components/billingsdk/pricing-table-seven\"\nimport { plans } from \"@/lib/billingsdk-config\"\n\nexport function PricingTableSevenDemo() {\n  return (\n    <PricingTableSeven\n      plans={plans}\n      onPlanSelect={(planId: string) => console.log(\"Selected plan:\", planId)}\n      title=\"The Perfect Plan For Your Needs\"\n      description=\"Our transparent pricing makes it easy to find a plan that works within your financial constraints.\"\n    />\n  )\n}\n",
      "type": "registry:component",
      "target": "components/pricing-table-seven-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\n    id: string\n    title: string\n    description: string\n    highlight?: boolean\n    type?: 'monthly' | 'yearly'\n    currency?: string\n    monthlyPrice: string\n    yearlyPrice: string\n    buttonText: string\n    badge?: string\n    features: {\n        name: string\n        icon: string\n        iconColor?: string\n    }[]\n}\n\nexport interface CurrentPlan {\n    plan: Plan\n    type: 'monthly' | 'yearly' | 'custom'\n    price?: string\n    nextBillingDate: string\n    paymentMethod: string\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\n}\n\nexport const plans: Plan[] = [\n    {\n        id: 'starter',\n        title: 'Starter',\n        description: 'For developers testing out Liveblocks locally.',\n        currency: '$',\n        monthlyPrice: '0',\n        yearlyPrice: '0',\n        buttonText: 'Start today for free',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'pro',\n        title: 'Pro',\n        description: 'For companies adding collaboration in production.',\n        currency: '$',\n        monthlyPrice: '20',\n        yearlyPrice: '199',\n        buttonText: 'Sign up',\n        badge: 'Most popular',\n        highlight: true,\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'enterprise',\n        title: 'Enterprise',\n        description: 'For organizations that need more support and compliance features.',\n        currency: '$',\n        monthlyPrice: 'Custom',\n        yearlyPrice: 'Custom',\n        buttonText: 'Contact sales',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    }\n];\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}
{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-eight",
  "type": "registry:block",
  "title": "Pricing Table Eight",
  "description": "Feature-comparison pricing table with aligned cards and user slider",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "badge",
    "slider",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-eight.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Check, Info } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\n// Define variants using CVA\nconst sectionVariants = cva(\"py-32\", {\n  variants: {\n    size: {\n      small: \"py-6 md:py-12\",\n      medium: \"py-10 md:py-20\", \n      large: \"py-16 md:py-32\",\n    },\n    theme: {\n      minimal: \"\",\n      classic: \"bg-gradient-to-b from-background to-muted/20 relative overflow-hidden\",\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n    theme: \"minimal\",\n  },\n});\n\nconst titleVariants = cva(\"text-pretty text-center font-bold\", {\n  variants: {\n    size: {\n      small: \"text-3xl lg:text-4xl\",\n      medium: \"text-4xl lg:text-5xl\",\n      large: \"text-4xl lg:text-6xl\",\n    },\n    theme: {\n      minimal: \"\",\n      classic: \"bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\",\n    },\n  },\n  defaultVariants: {\n    size: \"large\",\n    theme: \"minimal\",\n  },\n});\n\nconst descriptionVariants = cva(\"text-muted-foreground max-w-2xl mx-auto text-center\", {\n  variants: {\n    size: {\n      small: \"text-base lg:text-lg\",\n      medium: \"text-lg lg:text-xl\",\n      large: \"lg:text-xl\",\n    },\n    theme: {\n      minimal: \"\",\n      classic: \"\",\n    },\n  },\n  defaultVariants: {\n    size: \"large\",\n    theme: \"minimal\",\n  },\n});\n\nconst cardVariants = cva(\n  \"relative cursor-pointer transition-all duration-200 hover:shadow-lg\",\n  {\n    variants: {\n      size: {\n        small: \"p-4\",\n        medium: \"p-5\",\n        large: \"p-6\",\n      },\n      theme: {\n        minimal: \"\",\n        classic: \"hover:shadow-xl backdrop-blur-sm bg-card/50 border-border/50\",\n      },\n      selected: {\n        true: \"\",\n        false: \"\",\n      },\n    },\n    compoundVariants: [\n      {\n        theme: \"minimal\",\n        selected: true,\n        className: \"border-indigo-600 shadow-lg ring-2 ring-indigo-600\",\n      },\n      {\n        theme: \"minimal\", \n        selected: false,\n        className: \"hover:border-muted-foreground\",\n      },\n      {\n        theme: \"classic\",\n        selected: true,\n        className: \"border-primary/50 shadow-xl ring-2 ring-primary/20 bg-gradient-to-b from-primary/5 to-transparent\",\n      },\n      {\n        theme: \"classic\",\n        selected: false,\n        className: \"hover:border-primary/30\",\n      },\n    ],\n    defaultVariants: {\n      size: \"large\",\n      theme: \"minimal\",\n      selected: false,\n    },\n  }\n);\n\nconst buttonVariants = cva(\n  \"w-full transition-all duration-300\",\n  {\n    variants: {\n      theme: {\n        minimal: \"\",\n        classic: \"relative overflow-hidden bg-gradient-to-r from-primary to-primary/80 text-primary-foreground font-semibold hover:shadow-xl active:scale-95 border border-primary/20\",\n      },\n      selected: {\n        true: \"\",\n        false: \"\",\n      },\n    },\n    compoundVariants: [\n      {\n        theme: \"minimal\",\n        selected: true,\n        className: \"bg-indigo-600 hover:bg-indigo-700 text-white\",\n      },\n      {\n        theme: \"minimal\",\n        selected: false,\n        className: \"bg-background border border-border text-foreground hover:bg-muted\",\n      },\n      {\n        theme: \"classic\",\n        selected: true,\n        className: \"bg-gradient-to-r from-indigo-600 to-indigo-700 text-white\",\n      },\n      {\n        theme: \"classic\",\n        selected: false,\n        className: \"bg-muted/50 text-muted-foreground hover:bg-muted\",\n      },\n    ],\n    defaultVariants: {\n      theme: \"minimal\",\n      selected: false,\n    },\n  }\n);\n\n// TypeScript interfaces\nexport interface PricingTableEightPlan {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  users: number | string;\n  popular?: boolean;\n}\n\nexport interface FeatureItemRecord {\n  name: string;\n  tooltip?: boolean;\n  [planId: string]: boolean | string | undefined;\n}\n\nexport interface FeatureCategory {\n  category: string;\n  items: FeatureItemRecord[];\n}\n\nexport interface PricingTableEightProps extends VariantProps<typeof sectionVariants> {\n  plans: PricingTableEightPlan[];\n  features: FeatureCategory[];\n  title?: string;\n  description?: string;\n  onPlanSelect?: (planId: string) => void;\n  className?: string;\n}\n\nexport function PricingTableEight({ \n  className,\n  plans,\n  features,\n  title = \"Choose a plan that's right for you\",\n  description = \"We believe Untitled should be accessible to all companies, no matter the size of your startup.\",\n  onPlanSelect,\n  size,\n  theme = \"minimal\"\n}: PricingTableEightProps) {\n  const [selectedPlan, setSelectedPlan] = useState(plans.find(p => p.popular)?.id || plans[0]?.id || \"\");\n\n  const currentPlan = plans.find((plan) => plan.id === selectedPlan) || plans[0];\n  const sliderValue = [typeof currentPlan?.users === \"string\" ? 25 : (currentPlan?.users || 1)];\n\n  const renderFeatureValue = (value: boolean | string | undefined) => {\n    if (typeof value === \"boolean\") {\n      return value ? <Check className=\"h-5 w-5 text-indigo-600\" /> : <span className=\"text-muted-foreground\">—</span>;\n    }\n    if (typeof value === \"string\") {\n      return <span className=\"text-sm text-foreground\">{value}</span>;\n    }\n    return <span className=\"text-muted-foreground\">—</span>;\n  };\n\n  const handlePlanSelect = (planId: string) => {\n    setSelectedPlan(planId);\n    onPlanSelect?.(planId);\n  };\n\n  return (\n    <section className={cn(sectionVariants({ size, theme }), className)}>\n      {/* Classic theme background elements */}\n      {theme === \"classic\" && (\n        <>\n          <div className=\"absolute inset-0 bg-grid-pattern opacity-5\" />\n          <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-indigo-600/5 rounded-full blur-3xl\" />\n          <div className=\"absolute top-1/4 right-1/4 w-64 h-64 bg-indigo-600/5 rounded-full blur-2xl\" />\n        </>\n      )}\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Hero Section */}\n        <div className=\"text-center\">\n          <h1 className={cn(titleVariants({ size, theme }))}>\n            {title}\n          </h1>\n          <p className={cn(descriptionVariants({ size, theme }), \"mt-6\")}>\n            {description}\n          </p>\n        </div>\n\n        {/* User Slider */}\n        <div className=\"mx-auto mt-12 max-w-md\">\n          <div className=\"relative\">\n            <Slider value={sliderValue} max={25} min={1} step={1} className=\"w-full\" disabled />\n            <div className=\"mt-2 text-center\">\n              <span className=\"text-sm font-medium text-foreground\">{currentPlan?.users} users</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Pricing Cards */}\n        <div className=\"mt-16\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4 mb-8\">\n            <div></div>\n            {plans.map((plan) => (\n              <motion.div\n                key={plan.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3 }}\n              >\n                <Card\n                  className={cn(\n                    cardVariants({ \n                      size, \n                      theme, \n                      selected: selectedPlan === plan.id \n                    })\n                  )}\n                  onClick={() => handlePlanSelect(plan.id)}\n                >\n                  {plan.popular && (\n                    <div className=\"absolute -top-3 left-1/2 -translate-x-1/2 z-10\">\n                      <Badge className={cn(\n                        \"px-4 py-1 text-sm font-medium rounded-md shadow-sm\",\n                        theme === \"classic\" \n                          ? \"bg-gradient-to-r from-indigo-600 to-indigo-700 text-white border-indigo-600/20\"\n                          : \"bg-indigo-600 hover:bg-indigo-700 text-white\"\n                      )}>\n                        Most popular\n                      </Badge>\n                    </div>\n                  )}\n                  <CardHeader className=\"text-center\">\n                    <CardTitle className=\"text-lg font-semibold\">{plan.name}</CardTitle>\n                    <CardDescription className=\"text-sm text-muted-foreground\">{plan.description}</CardDescription>\n                    <div className=\"mt-4\">\n                      <span className={cn(\n                        \"text-4xl font-bold\",\n                        theme === \"classic\" \n                          ? \"bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\"\n                          : \"text-foreground\"\n                      )}>\n                        ${plan.price}\n                      </span>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <Button\n                      className={cn(\n                        buttonVariants({ theme, selected: selectedPlan === plan.id })\n                      )}\n                    >\n                      Get started\n                    </Button>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Feature Comparison Table */}\n          <div className=\"overflow-hidden rounded-lg border bg-card\">\n            <AnimatePresence mode=\"wait\">\n              {features.map((category, categoryIndex) => (\n                <motion.div\n                  key={category.category}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ duration: 0.3, delay: categoryIndex * 0.1 }}\n                >\n                  {categoryIndex > 0 && <div className=\"border-t\" />}\n\n                  {/* Category Header */}\n                  <div className=\"bg-muted/50 px-6 py-4\">\n                    <h3 className=\"text-sm font-semibold text-foreground\">{category.category}</h3>\n                  </div>\n\n                  {/* Feature Rows */}\n                  {category.items.map((feature, featureIndex) => (\n                    <div\n                      key={feature.name}\n                      className={cn(\n                        \"grid grid-cols-1 lg:grid-cols-4 gap-4 px-6 py-4\",\n                        featureIndex > 0 && \"border-t border-border/50\",\n                      )}\n                    >\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm text-foreground\">{feature.name}</span>\n                        {feature.tooltip && <Info className=\"h-4 w-4 text-muted-foreground\" />}\n                      </div>\n                      {plans.map((plan) => (\n                        <div key={plan.id} className=\"flex items-center justify-center\">\n                          {renderFeatureValue(feature[plan.id])}\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </motion.div>\n              ))}\n            </AnimatePresence>\n          </div>\n\n          {/* Bottom CTA Buttons */}\n          <div className=\"mt-8 grid grid-cols-1 lg:grid-cols-4 gap-4\">\n            <div></div>\n            {plans.map((plan) => (\n              <Button\n                key={plan.id}\n                className={cn(\n                  buttonVariants({ theme, selected: selectedPlan === plan.id })\n                )}\n                onClick={() => handlePlanSelect(plan.id)}\n              >\n                Get started\n              </Button>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-eight.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-eight-demo.tsx",
      "content": "\"use client\";\n\nimport { PricingTableEight } from \"@/components/billingsdk/pricing-table-eight\";\n\nconst plans = [\n  {\n    id: \"basic\",\n    name: \"Basic plan\",\n    description: \"Our most popular plan.\",\n    price: 10,\n    popular: false,\n    users: 5,\n  },\n  {\n    id: \"business\",\n    name: \"Business plan\",\n    description: \"Best for growing teams.\",\n    price: 20,\n    popular: true,\n    users: 15,\n  },\n  {\n    id: \"enterprise\",\n    name: \"Enterprise plan\",\n    description: \"Best for large teams.\",\n    price: 40,\n    popular: false,\n    users: \"25+\",\n  },\n];\n\nconst features = [\n  {\n    category: \"Overview\",\n    items: [\n      {\n        name: \"Basic features\",\n        tooltip: true,\n        basic: true,\n        business: true,\n        enterprise: true,\n      },\n      {\n        name: \"Users\",\n        tooltip: true,\n        basic: \"10\",\n        business: \"20\",\n        enterprise: \"Unlimited\",\n      },\n      {\n        name: \"Individual data\",\n        tooltip: true,\n        basic: \"20GB\",\n        business: \"40GB\",\n        enterprise: \"Unlimited\",\n      },\n      {\n        name: \"Support\",\n        tooltip: true,\n        basic: true,\n        business: true,\n        enterprise: true,\n      },\n      {\n        name: \"Automated workflows\",\n        tooltip: true,\n        basic: false,\n        business: true,\n        enterprise: true,\n      },\n      {\n        name: \"200+ integrations\",\n        tooltip: true,\n        basic: false,\n        business: true,\n        enterprise: true,\n      },\n    ],\n  },\n  {\n    category: \"Reporting and analytics\",\n    items: [\n      {\n        name: \"Analytics\",\n        tooltip: true,\n        basic: \"Basic\",\n        business: \"Advanced\",\n        enterprise: \"Advanced\",\n      },\n      {\n        name: \"Export reports\",\n        tooltip: true,\n        basic: true,\n        business: true,\n        enterprise: true,\n      },\n      {\n        name: \"Scheduled reports\",\n        tooltip: true,\n        basic: true,\n        business: true,\n        enterprise: true,\n      },\n      {\n        name: \"API access\",\n        tooltip: true,\n        basic: false,\n        business: true,\n        enterprise: true,\n      },\n      {\n        name: \"Advanced reports\",\n        tooltip: true,\n        basic: false,\n        business: true,\n        enterprise: true,\n      },\n      {\n        name: \"Saved reports\",\n        tooltip: true,\n        basic: false,\n        business: true,\n        enterprise: true,\n      },\n      {\n        name: \"Customer properties\",\n        tooltip: true,\n        basic: false,\n        business: false,\n        enterprise: true,\n      },\n      {\n        name: \"Custom fields\",\n        tooltip: true,\n        basic: false,\n        business: false,\n        enterprise: true,\n      },\n    ],\n  },\n  {\n    category: \"User access\",\n    items: [\n      {\n        name: \"SSO/SAML authentication\",\n        tooltip: true,\n        basic: true,\n        business: true,\n        enterprise: true,\n      },\n      {\n        name: \"Advanced permissions\",\n        tooltip: true,\n        basic: false,\n        business: true,\n        enterprise: true,\n      },\n      {\n        name: \"Audit log\",\n        tooltip: true,\n        basic: false,\n        business: false,\n        enterprise: true,\n      },\n      {\n        name: \"Data history\",\n        tooltip: true,\n        basic: false,\n        business: false,\n        enterprise: true,\n      },\n    ],\n  },\n];\n\nexport function PricingTableEightDemo() {\n  return (\n    <PricingTableEight\n      plans={plans}\n      features={features}\n      title=\"Choose a plan that's right for you\"\n      description=\"We believe Untitled should be accessible to all companies, no matter the size of your startup.\"\n      onPlanSelect={(planId) => console.log(\"Selected plan:\", planId)}\n      size=\"medium\"\n      theme=\"minimal\"\n      className=\"w-full\"\n    />\n  );\n}\n",
      "type": "registry:component",
      "target": "components/pricing-table-eight-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\n    id: string\n    title: string\n    description: string\n    highlight?: boolean\n    type?: 'monthly' | 'yearly'\n    currency?: string\n    monthlyPrice: string\n    yearlyPrice: string\n    buttonText: string\n    badge?: string\n    features: {\n        name: string\n        icon: string\n        iconColor?: string\n    }[]\n}\n\nexport interface CurrentPlan {\n    plan: Plan\n    type: 'monthly' | 'yearly' | 'custom'\n    price?: string\n    nextBillingDate: string\n    paymentMethod: string\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\n}\n\nexport const plans: Plan[] = [\n    {\n        id: 'starter',\n        title: 'Starter',\n        description: 'For developers testing out Liveblocks locally.',\n        currency: '$',\n        monthlyPrice: '0',\n        yearlyPrice: '0',\n        buttonText: 'Start today for free',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'pro',\n        title: 'Pro',\n        description: 'For companies adding collaboration in production.',\n        currency: '$',\n        monthlyPrice: '20',\n        yearlyPrice: '199',\n        buttonText: 'Sign up',\n        badge: 'Most popular',\n        highlight: true,\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'enterprise',\n        title: 'Enterprise',\n        description: 'For organizations that need more support and compliance features.',\n        currency: '$',\n        monthlyPrice: 'Custom',\n        yearlyPrice: 'Custom',\n        buttonText: 'Contact sales',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    }\n];\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}